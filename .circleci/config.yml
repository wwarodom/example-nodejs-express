version: 2
jobs:
  build:
    - run: echo Build
      docker:
      - image: circleci/node:8.11.1-stretch
      working_directory: ~/repo
      steps:
         - checkout
         - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "package.json" }}
              # fallback 
              - v1-dependencies-
        - run: npm install
        - save_cache:
            paths:
              - node_modules
            key: v1-dependencies-{{ checksum "package.json" }}
  test:  
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback 
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm test

    ship:
      - run: echo Ship
    deploy:  
      - setup_remote_docker
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
           name: "Build docker image and push to docker hub"
           command: |
              cp Dockerfile.production Dockerfile
              if [ "${CIRCLE_BRANCH}"  == "master" ]; then
                docker build -t wwarodom/example-nodejs-circle:latest .
                docker build -t wwarodom/example-nodejs-circle:${CIRCLE_SHA1} .
                docker push wwarodom/example-nodejs-circle:latest
                docker push wwarodom/example-nodejs-circle:${CIRCLE_SHA1}
              elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
                docker build -t wwarodom/example-nodejs-circle_staging:latest .
                docker push wwarodom/example-nodejs-circle_staging:latest
              else
                echo "This is ${CIRCLE_BRANCH}"
              fi

      - run: 
          name: "Call to rancher to deploy"
          command: |
             if [ "${CIRCLE_BRANCH}"  == "master" ]; then
               docker run --rm -it \
                 -e CATTLE_ACCESS_KEY="$CATTLE_ACCESS_KEY" \
                 -e CATTLE_SECRET_KEY="$CATTLE_SECRET_KEY" \
                 -e CATTLE_URL="http://178.128.90.205:8081/" \
                 etlweather/gaucho upgrade "1st17" \
                 --imageUuid 'docker:wwarodom/example-nodejs-circle:latest' \
                 --batch_size 1 --start_first \
                 --auto_complete --timeout 600 \
                 /
              elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
                docker run --rm -it \
                 -e CATTLE_ACCESS_KEY="$CATTLE_ACCESS_KEY" \
                 -e CATTLE_SECRET_KEY="$CATTLE_SECRET_KEY" \
                 -e CATTLE_URL="http://178.128.90.205:8081/" \
                 etlweather/gaucho upgrade "1st17" \
                 --imageUuid 'docker:wwarodom/example-nodejs-circle_staging:latest' \
                 --batch_size 1 --start_first \
                 --auto_complete --timeout 600 \
                 /
              else
                echo "This is ${CIRCLE_BRANCH}"
              fi   
      - run: echo Done

workflows:
  version: 2
  myworkflow:
    jobs:
      - build
      - test: 
          requires:
            - build
      - ship:
          requires:
            - build
            - test
      - deploy:
          type: approval
          requires:
            - build
            - test
            - ship